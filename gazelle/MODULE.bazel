module(
    name = "rules_python_gazelle_plugin",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "bazel_skylib", version = "1.6.1")
bazel_dep(name = "rules_python", version = "0.18.0")
bazel_dep(name = "rules_go", version = "0.41.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.33.0", repo_name = "bazel_gazelle")
bazel_dep(
    name = "hermetic_cc_toolchain",
    # TODO(zplin): use thel latest released version after we publish it to BCR
    version = "",
)
archive_override(
    module_name = "hermetic_cc_toolchain",
    integrity = "sha256-3wka/CXXOwlI7TcdPWG+7ylEf2kFCOArwk5wAczBLTg=",
    urls = [
        "https://github.com/uber/hermetic_cc_toolchain/releases/download/v3.1.0/hermetic_cc_toolchain-v3.1.0.tar.gz",
    ],
)

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.31",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.31",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
)

local_path_override(
    module_name = "rules_python",
    path = "..",
)

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_bazelbuild_buildtools",
    "com_github_bmatcuk_doublestar_v4",
    "com_github_emirpasic_gods",
    "com_github_ghodss_yaml",
    "com_github_smacker_go_tree_sitter",
    "com_github_stretchr_testify",
    "in_gopkg_yaml_v2",
    "org_golang_x_sync",
)

python_stdlib_list = use_extension("//python:extensions.bzl", "python_stdlib_list")
use_repo(
    python_stdlib_list,
    "python_stdlib_list_3_10",
    "python_stdlib_list_3_11",
    "python_stdlib_list_3_12",
    "python_stdlib_list_3_8",
    "python_stdlib_list_3_9",
)
